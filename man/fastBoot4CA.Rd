% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/InferencesMultinom4CA-3.R
\name{fastBoot4CA}
\alias{fastBoot4CA}
\title{\code{fastBoot4CA}:
create for a Correspondence Analysis
(CA)  a Bootstrap Cube
obtained from bootstrapping the observations
from a contingency table.}
\usage{
fastBoot4CA(
  X,
  Fi = NULL,
  Fj = NULL,
  delta = NULL,
  nf2keep = 3,
  nIter = 1000,
  critical.value = 2,
  eig = FALSE,
  alphaLevel = 0.05
)
}
\arguments{
\item{X}{the data matrix}

\item{Fi}{(default = \code{NULL})
the \eqn{I}-set factor scores
(for the rows) from the analysis of \strong{X}.
if NULL, \code{Boot4RowCA} will compute them.}

\item{Fj}{(default = \code{NULL}),
the  \eqn{J}-set factor scores
(for the columns) from the analysis of \strong{X}.
if NULL, \code{Boot4RowCA} will compute them.}

\item{delta}{(default = \code{NULL}),
the singular values
from the CA of \strong{X}. If \code{NULL} (default),
\code{Boot4RowCA} will compute them.}

\item{nf2keep}{How many factors to
keep for the analysis (\code{Default = 3}).}

\item{nIter}{(Default = 1000). Number of Iterations
(i.e. number of Bootstrap samples).}

\item{critical.value}{(\code{Default = 2}).
The critical value for a BR to be considered
significant.}

\item{eig}{if TRUE compute bootstrapped
confidence intervals (CIs) for the eigenvalues
(default is FALSE).}

\item{alphaLevel}{the alpha level to compute
confidence intervals for the eigenvalues
(with CIS at 1-alpha). Default is .05}
}
\value{
a list with 1) \code{bootCube.i} of
Bootstrapped factor scores (\emph{I}-set)
2)
\code{bootRatios.i}: the bootstrap ratios
(BR)
for
\code{bootRatiosSignificant.i}: the Significant
BRs;
a list with \code{bootCube.j}:
An Items * Dimension * Iteration Brick of
Bootstrapped factor scores (\emph{J}-set);
\code{bootRatios.j}: the bootstrap ratios (BR);
\code{bootRatiosSignificant.j}: the Significant
BRs;
\code{eigenValues} the \code{nIter} * \code{nL} table
of eigenvalues; \code{eigenCIs}: the CIs for the
eigenvalues.
}
\description{
\code{fastBoot4CA}:
Creates Bootstrap cubes for the \emph{I} and \emph{J} sets
of a CA. The Bootstrap cubes are
obtained from bootstrapping the entries/cells
of the contingency table.
\code{fastBoot4CA} uses the multinomial distribution
to generate the
Bootstrap samples (function \code{rmultinom})
\code{fastBoot4CA} uses the \emph{transition formula}
to get
the values of the column factors.
Gives also the bootstrap eigenvalues
(if \code{eigen = TRUE}).
}
\details{
Note: the \code{rmultinom()} function
cannot handle numbers of observations that are too high
(i.e., roughly larger than 10^9), so if the table total
is larger than 10^8, the table is recoded so that
its sum is roughly equal to 10^8.
Planned development: A compact version that gives only
bootstrap ratios (not the whole brick
\code{BootstrapBricks}).

\code{fastBoot4CA} should be used only
when the data consists in a real
contingency table with a
relatively large \eqn{N}.
Bootstrap estimates are obtained by creating
bootstrap contingency tables
from a multinomial distribution.
Permutation tests are obtained by creating
contingency tables matching H0
(i.e., multinomial with \eqn{Pij = Pi*Pj})
Permutation tests will not work with MCA though
because in MCA a variable is coded
with a set of 0/1 columns (complete disjonctive
coding scheme)---A coding scheme which implies that
the columns are not
independent (because they come in blocks).
}
\author{
Herv√© Abdi
}
