% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/testMC.R
\name{monteCarlo.eigen}
\alias{monteCarlo.eigen}
\title{Monte Carlo generation of (random) eigenvalues to match
a data matrix.}
\usage{
monteCarlo.eigen(
  X,
  nIter = 100,
  center = TRUE,
  scale = "SS1",
  FUN = rnorm,
  ...
)
}
\arguments{
\item{X}{The data matrix to match.}

\item{nIter}{how many random set of eigenvalues
to generate; Default: \code{100}.}

\item{center}{(Default = \code{TRUE}) if
\code{TRUE}: center the data (by columns).}

\item{scale}{the type of scaling of the
data. Can be \code{FALSE} (no scaling),
\code{TRUE} (scale as \eqn{Z}-score),
\code{'NONE'} (no scaling), or \code{'SS1'} (all columns
of the data matrix have norm 1, and so the eigen-values
come from a correlation matrix).
Default: \code{'SS1'}.}

\item{FUN}{the function to generate
random numbers; Default: \code{rnorm} (normal distribution).
Could be any of the functions provided by \code{R}, such as
\code{rexp, rlogis,}, etc. Most of these functions require
additional parameters to be passed via ... (see below).}

\item{...}{Stuff (i.e., parameters)
to pass the \code{FUN} if needed
(e.g., mean and standard deviation). To find these parameters,
check the help of the function used for the random number
generator.}
}
\value{
a list with 3 elements
\enumerate{
\item \code{$fixed.eigs}: the eigen-values of \eqn{X},
\item \code{$rand.eigs}: an \code{nIter} by rank(\eqn{X}) matrix
of the eigenvalues of the bootstrapped samples,
\item \code{$rand.eigs.sorted}:
an \code{nIter} by rank(\eqn{X}) matrix
of the eigenvalues of the bootstrapped samples.
}
}
\description{
\code{monteCarlo.eigen}:
generates
Monte Carlo random eigenvalues to match
a data given matrix. The random numbers can be generated from
any of the random number generators in \code{R}.
(of course, the default is a standard normal distribution).
Note that the specific parameters for the random gnerator
need to be passed as additional arguments to the function
(i.e., with the  "..." procedure).
}
\details{
\code{monteCarlo.eigen} can be used
to implement a \emph{parallel} test for the number
of reliable components. Note that the \emph{parallel} test
becomes equivalent to the Kaiser test (i.e., eigenvalues
larger than the average inertia) when the number of rows
of the data matrix is large enough.
}
\examples{
data(iris)
random.eigen <- monteCarlo.eigen(iris[,1:4], nIter = 10)
}
\seealso{
\code{\link[stats]{rnorm}} \code{\link{scale0}}
\code{\link{boot.eigen}}
}
